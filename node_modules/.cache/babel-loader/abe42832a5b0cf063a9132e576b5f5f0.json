{"ast":null,"code":"var _jsxFileName = \"/Users/jonathan/01_code/DUK-strapi/frontend/src/pages/comp/ProjectComponent/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useGetProjects } from './useGetProjecs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ProjectComponent = () => {\n  _s();\n\n  const [projectData, setProjectData] = useState();\n  useGetProjects(setProjectData);\n  console.log(projectData); // console.log(projectData.data[0].attributes.ProjectDesciption)\n  // console.log(projectData.data[0].attributes.ProjectTitle)\n  //     const projectComp = projectData.data.map((x) => {\n  //         <div>\n  //             <h1>\n  //                 {x.attributes.ProjecTitle}\n  //             </h1>\n  //         </div>\n  //     }\n  // )\n  //     return (\n  //         <React.Fragment>\n  //             {projectData.data.map((x) => (\n  //             )\n  //             )}\n  //          </React.Fragment>\n  //     )\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: projectData.data.map(x => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: x.attributes.ProjectTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: x.attributes.ProjectDesciption\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: x.attributes.formats.medium.url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 13\n  }, this);\n};\n\n_s(ProjectComponent, \"FSdjNPo7ULQn0jdjSTI+Y5lCC7w=\", false, function () {\n  return [useGetProjects];\n});\n\n_c = ProjectComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectComponent\");","map":{"version":3,"sources":["/Users/jonathan/01_code/DUK-strapi/frontend/src/pages/comp/ProjectComponent/index.jsx"],"names":["React","useState","useGetProjects","ProjectComponent","projectData","setProjectData","console","log","data","map","x","attributes","ProjectTitle","ProjectDesciption","formats","medium","url"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,cAAT,QAA+B,iBAA/B;;AAGA,OAAO,MAAMC,gBAAgB,GAAG,MAAM;AAAA;;AAElC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,EAA9C;AAEAC,EAAAA,cAAc,CAACG,cAAD,CAAd;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ,EANkC,CAQlC;AACA;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEI,sBAAQ;AAAA,cACPA,WAAW,CAACI,IAAZ,CAAiBC,GAAjB,CAAsBC,CAAD,iBAClB;AAAA,8BACI;AAAA,kBAAKA,CAAC,CAACC,UAAF,CAAaC;AAAlB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAIF,CAAC,CAACC,UAAF,CAAaE;AAAjB;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAK,QAAA,GAAG,EAAEH,CAAC,CAACC,UAAF,CAAaG,OAAb,CAAqBC,MAArB,CAA4BC;AAAtC;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADH;AADO;AAAA;AAAA;AAAA;AAAA,UAAR;AASH,CAxCM;;GAAMb,gB;UAITD,c;;;KAJSC,gB","sourcesContent":["import React, { useState } from 'react'\nimport { useGetProjects } from './useGetProjecs'\n\n\nexport const ProjectComponent = () => {\n\n    const [projectData, setProjectData] = useState()\n\n    useGetProjects(setProjectData);\n\n    console.log(projectData)\n\n    // console.log(projectData.data[0].attributes.ProjectDesciption)\n    // console.log(projectData.data[0].attributes.ProjectTitle)\n\n//     const projectComp = projectData.data.map((x) => {\n//         <div>\n//             <h1>\n//                 {x.attributes.ProjecTitle}\n//             </h1>\n//         </div>\n//     }\n// )\n\n\n//     return (\n//         <React.Fragment>\n//             {projectData.data.map((x) => (\n\n//             )\n//             )}\n//          </React.Fragment>\n//     )\n// }\n\n    return (<div>\n    {projectData.data.map((x) => (\n        <div>\n            <h1>{x.attributes.ProjectTitle}</h1>\n            <p>{x.attributes.ProjectDesciption}</p>\n            <img src={x.attributes.formats.medium.url}></img>\n        </div>\n    ))}\n    </div>);\n}\n"]},"metadata":{},"sourceType":"module"}